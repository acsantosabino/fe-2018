{"version":3,"sources":["nomes/nomes.js","withRoot.js","inicio/inicio.js","serviceWorker.js","index.js"],"names":["Nomes","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","sm","TextField_default","required","id","name","label","fullWidth","autoComplete","FormControlLabel_default","control","Checkbox_default","color","value","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","core_styles","CssBaseline_default","steps","Inicio","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNext","setState","state","activeStep","handleBack","handleReset","identificadores","nomes","dadosDemograficos","enderecos","comunicacoesEletronica","vinculos","url","loadCommentsFromServer","_this2","axios","get","then","response","sessionStorage","setItem","JSON","stringify","data","catch","e","console","error","classes","AppBar_default","position","className","appBar","Toolbar_default","noWrap","layout","Paper_default","paper","component","align","Stepper_default","stepper","map","Step_default","key","StepLabel_default","length","step","Error","getStepContent","buttons","Button_default","onClick","button","React","withStyles","defineProperty","width","marginLeft","unit","marginRight","breakpoints","up","marginTop","marginBottom","padding","concat","display","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","inicio","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3172ee3c.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction Nomes() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            autoComplete=\"lname\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"billing address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"addiress2\"\n            name=\"addiress2\"\n            label=\"Address line 2\"\n            fullWidth\n            autoComplete=\"billing address-line2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"billing address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"billing postal-code\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            autoComplete=\"billing country\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n            label=\"Use this address for payment details\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Nomes;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport axios from 'axios'\n\nimport Nomes from '../nomes/nomes';\nimport withRoot from '../withRoot';\n\n/* \nimport Endereco from './endereco/endereco.jsx'\nimport ComunicacoesEletronica from \"./comunicacoes/ComunicacoesEletronica\";\nimport Vinculos from './vinculos/Vinculos'; */\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 900,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    }\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit\n  }\n});\n\nconst steps = [\n  \"Nomes\",\n  \"Identificadores\",\n  \"Dados demográficos\",\n  \"Endereços\",\n  \"Comunicações Eletrônica\",\n  \"Vínculo\"\n];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <Nomes />;\n    case 1:\n      return <Nomes />;\n    case 2:\n      return <Nomes />;\n    case 3:\n      return <Nomes />;\n    case 4:\n      return <Nomes />;\n    case 5:\n      return <Nomes />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nclass Inicio extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      identificadores: [],\n      nomes: [],\n      dadosDemograficos: [],\n      enderecos: [],\n      comunicacoesEletronica: [],\n      vinculos: [],\n      activeStep: 0,\n      url : \"../data/modeloDeDados.json\"\n    };\n    this.loadCommentsFromServer();\n  }\n\n  handleNext = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep + 1\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0\n    });\n  };\n\n  loadCommentsFromServer() {\n    axios.get(this.state.url).then(response =>{\n      sessionStorage.setItem('identificadores', JSON.stringify(response.data.identificadores));\n      sessionStorage.setItem('nomes', JSON.stringify(response.data.nomes));\n      sessionStorage.setItem('dadosDemograficos', JSON.stringify(response.data.dadosDemograficos));\n      sessionStorage.setItem('enderecos', JSON.stringify(response.data.enderecos));\n      sessionStorage.setItem('comunicacoesEletronica', JSON.stringify(response.data.comunicacoesEletronica));\n      sessionStorage.setItem('vinculos', JSON.stringify(response.data.vinculos));\n      this.setState(response.data);\n   }).catch(e =>  {\n \n    console.error(e);\n   });\n}\n// componentWillMount() {\n//this.loadCommentsFromServer();\n\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Hospital X\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Cadastro de paciente\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Paciente cadastrado com sucesso!\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    Lorem iphson\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button\n                        onClick={this.handleBack}\n                        className={classes.button}\n                      >\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1\n                        ? \"Finalizar cadastro\"\n                        : \"Avançar\"}\n                    </Button>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nInicio.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withRoot(withStyles(styles)(Inicio));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Inicio from './inicio/inicio';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Inicio />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}